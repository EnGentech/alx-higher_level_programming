========================================================
importing module 0-add_integer from file
========================================================
>>> add_integer = __import__('0-add_integer').add_integer


>>> add_integer(2, 3)
5

testing negative result:
    >>> add_integer(-10, 5)
    -5

testing char:
    >>> add_integer('try', 8)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

testing char:
    >>> add_integer(9, "8")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

testing negatives:
    >>> add_integer(-7, -4)
    -11

testing bigger numbs:
    >>> add_integer(233333333333,6)
    233333333339

testing list:
    >>> add_integer(9, [8,9,7])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

testing empty function:
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

testing function with one argument:
    >>> add_integer(2)
    100

testing more than two argument:
    >>> add_integer(2, 5, 6)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

testing for float with integer:
    >>> add_integer(3.8, 2)
    5

testing two floating numbers:
    >>> add_integer(3.5, 3.8)
    6

testing for NAN:
	 >>> add_integer(1, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Testing for overflow:
	 >>> add_integer(1, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: cannot convert float infinity to integer
